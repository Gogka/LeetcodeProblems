//
//  LongestIncreasingSubsequence.swift
//  LeetcodeProblems
//
//  Created by Igor Tomilin on 25.03.2023.
//

import Foundation

final class LongestIncreasingSubsequence {
    /// âœ… https://leetcode.com/problems/longest-increasing-subsequence/description/
    /// Bottom up
    
    func lengthOfLIS(_ nums: [Int]) -> Int {
        var dp: [Int] = .init(repeating: 1, count: nums.count)
        for i in 0..<dp.count {
            for j in 0...i where nums[i] > nums[j] {
                dp[i] = max(dp[i], dp[j] + 1)
            }
        }
        return dp.max()!
    }
    /// Top down
    struct Index: Hashable {
        let i: Int
        let max: Int?
    }
    var memo: [Index: Int] = [:]
//    func lengthOfLIS(_ nums: [Int]) -> Int {
//        memo = [:]
//        return lengthOfLIS(nums, i: 0, max: nil)
//    }
    func lengthOfLIS(_ nums: [Int], i: Int, max: Int?) -> Int {
        if i == nums.count { return 0 }
        let index: Index = .init(i: i, max: max)
        if let val = memo[index] { return val }
        let length: Int
        if let max: Int = max {
            if nums[i] > max {
                length = Swift.max(lengthOfLIS(nums, i: i + 1, max: nums[i]) + 1, lengthOfLIS(nums, i: i + 1, max: max))
            } else {
                length = lengthOfLIS(nums, i: i + 1, max: max)
            }
        } else {
            length = Swift.max(lengthOfLIS(nums, i: i + 1, max: nums[i]) + 1, lengthOfLIS(nums, i: i + 1, max: nil))
        }
        memo[index] = length
        return length
    }
    struct TestCase {
        let nums: [Int]
        let result: Int
    }
    func test() {
        let cases: [TestCase] = [
            .init(nums: [10,9,2,5,3,7,101,18], result: 4),
            .init(nums: [0,1,0,3,2,3], result: 4),
            .init(nums: [7,7,7,7,7,7,7,7], result: 1),
            .init(nums: [377,564,110,-533,35,843,248,-870,-87,802,-179,-223,227,-889,-85,-348,543,918,-184,-132,-683,-292,-167,-23,871,876,-356,511,-242,465,63,78,41,958,723,32,-891,-563,-863,548,-564,473,278,-907,-686,-970,0,-377,952,-510,617,283,-810,-996,-864,445,226,-925,487,-18,677,-230,-715,-76,-382,-542,-278,399,503,-959,-334,-11,258,-142,789,-468,653,500,-14,-480,-786,-149,239,446,-546,-858,-189,-441,108,145,894,693,320,109,-709,839,666,387,60,860,-588,819,-79,-36,818,-619,-877,-815,-812,794,488,723,-157,-748,-381,-511,-890,893,-235,-224,667,-428,-874,534,29,-508,552,-221,-427,72,158,-555,-649,992,-900,246,186,855,158,-573,-341,386,-185,359,-541,-112,517,360,786,-640,762,830,83,908,318,-842,784,-434,-214,-345,-185,28,402,922,716,837,635,49,123,157,-943,-545,801,179,-19,52,372,168,678,0,-284,70,119,-648,-575,875,697,959,-578,977,-662,-771,-615,727,138,684,680,795,349,-999,-680,801,242,751,489,-954,-268,318,-474,-4,534,-42,-435,49,650,198,-269,-750,500,383,-180,-1,-382,952,-342,12,-906,-613,-897,780,576,209,-289,-627,970,-323,528,804,606,18,67,-397,551,-543,289,-781,-279,-137,-198,-89,508,-409,-210,-311,654,342,-272,-320,690,995,-981,-788,93,892,-588,971,540,239,701,226,964,-31,962,-617,237,807,541,-882,597,-276,-394,880,373,-807,-865,118,-657,657,-267,-759,255,-24,-190,-748,-508,832,-480,-134,-187,104,-928,-216,936,265,-99,723,-401,-627,-395,-158,60,-816,690,712,446,-219,-753,-765,-866,456,326,-99,-469,467,-749,-198,-273,-279,366,-972,534,455,-714,235,-712,920,647,360,-869,95,469,615,68,187,-951,-341,624,-967,390,-784,-292,-622,-307,435,738,-190,834,557,461,-200,709,-525,232,488,-785,-839,-408,492,-265,55,-986,-110,56,446,-581,27,189,826,-269,140,-857,945,-723,828,848,-844,-437,755,-345,-23,-577,59,-160,-796,254,-321,594,803,871,-125,684,-310,598,599,544,256,410,-426,-92,150,-200,-647,-344,-617,696,-795,-735,-669,-409,-896,-464,-373,145,-455,-349,0,-447,694,994,-665,-228,-234,-505,-248,659,-411,118,520,-242,886,-64,296,866,797,463,-254,-620,-576,757,-840,225,-482,-929,-906,499,-340,912,772,-462,277,874,940,644,-824,497,443,-588,612,-209,-102,250,-481,-257,-528,528,-389,-228,255,602,486,-737,-2,495,-190,-509,-872,869,-595,832,936,-706,629,-874,252,-693,-544,-160,787,682,474,-975,-87,457,339,-690,975,603,-791,-388,-685,-384,392,663,206,518,367,199,-83,-999,969,-42,-540,0,-199,-797,391,-16,533,190,-920,-720,-896,-332,533,-858,777,324,997,-89,-405,298,666,685,-262,463,-54,-428,534,804,-722,999,-811,107,462,-913,-994,901,-77,983,-878,-469,590,-814,-947,793,-368,379,-725,-730,-978,790,-746,541,99,559,-878,-499,-300,895,-484,114,-787,861,-106,673,-786,996,358,-817,-58,114,-316,537,716,633,-204,-522,0,-837,-262,-862,-141,505,800,397,-232,474,-357,-880,550,-340,-391,201,403,-62,-614,-312,-47,-368,124,760,-698,-206,872,972,-900,98,839,517,-731,41,382,820,-684,-38,-31,899,772,490,894,-933,62,-226,-375,672,993,-156,-82,108,-212,81,-736,8,-926,291,687,-788,-971,167,-605,242,889,356,194,486,-836,702,464,-771,-179,-492,385,-494,-574,-513,-698,786,502,615,-245,174,-55,686,717,-197,-360,414,86,519,254,706,487,561,223,716,513,-755,-608,-161,337,-57,-317,47,296,987,-556,293,647,-36,838,124,966,-24,-309,549,-859,-316,489,-664,-299,708,246,-778,228,-503,-606,77,320,-666,-465,-701,551,-448,-298,718,-672,-720,-438,-560,-298,-791,370,575,216,-707,615,386,742,247,-975,-289,3,-2,-390,-394,756,-569,472,628,-881,-844,-59,-805,-661,753,222,-125,-638,-108,-302,-865,-984,-519,308,-767,914,157,201,-895,774,-484,-532,465,-68,-452,-523,129,513,630,814,430,60,-593,-474,-219,-239,-748,-304,400,872,22,16,-291,16,758,-284,848,449,921,675,473,-999,773,631,-613,-794,-725,-655,567,-352,560,-772,-413,434,-295,-315,26,-772,780,-801,817,-833,660,-547,-36,911,-268,273,723,-501,816,-735,-816,-588,740,-635,-845,-622,-545,-270,187,-423,963,-842,-855,-286,-939,946,-497,-360,-930,-892,984,-136,-813,944,-667,-43,-162,-722,-169,233,338,1000,-806,-134,-189,-149,-162,-402,19,879,-882,-123,838,772,942,634,290,528,799,-343,835,-858,-941,-81,103,-534,-322,-104,-439,-744,656,-389,-185,-870,-664,574,-543,42,902,-161,-394,845,19,94,932,532,-107,325,-66,-914,-871,-33,-537,-540,691,-133,-620,498,-892,700,-602,-329,412,-709,-637,-860,-197,645,-667,163,1000,69,-454,256,-337,-924,121,-311,839,428,-466,-539,334,-695,-540,-183,361,-168,-610,-363,117,453,226,-123,-647,837,-798,-550,-664,97,-642,55,711,-22,477,-803,-516,-321,-773,241,371,-741,185,115,680,197,336,-598,815,916,-563,183,692,-155,118,-728,306,656,731,599,-262,-824,858,589,-883,-737,-776,520,164,-195,840,948,-877,130,-700,-137,863,-848,-38,538,130,-134,-614,-278,-759,547,-44,-113,-186,892,792,280,173,724,-250,-376,976,904,936,-163,-404,-512,-620,939,-473,-370,-422,611,-964,20,158,227,-327,45,-690,-24,435,-334,281,159,-286,-438,605,-360,224,603,631,-697,-725,672,-762,-60,-858,870,-470,-62,393,671,873,-788,-610,824,-791,664,-547,718,-664,-966,225,298,575,563,-830,-249,-797,-130,311,-844,-482,-986,-596,840,909,153,-115,882,483,990,222,-189,597,-715,-969,-17,-23,956,168,-401,-707,-567,-137,-217,-249,-732,-763,-69,-537,863,170,513,-721,735,883,-263,-158,-699,551,664,901,67,-439,972,-493,-480,-286,352,860,897,-872,3,-29,-565,542,513,-87,-242,-959,50,-399,388,-562,841,181,-897,-281,-702,-295,-823,-705,-357,-714,486,-524,-733,-100,792,-519,-137,176,-314,-323,-300,831,-761,-296,649,-720,432,-514,186,-112,536,873,-313,-135,574,271,-32,196,-418,-444,-879,-312,-768,-12,-412,554,-356,-690,-960,-500,916,523,-808,89,458,559,226,-250,-327,-304,-333,417,-784,-785,-877,359,-686,-814,-839,793,-508,53,769,616,403,821,18,838,-56,537,-334,-679,786,-736,-34,-631,-764,814,485,-460,-407,-709,-608,996,-589,180,737,-33,265,-577,71,-792,554,644,-250,452,133,-904,974,-673,667,-320,993,-424,14,797,317,-142,611,408,613,313,615,-796,559,860,451,-13,-597,421,-142,-892,112,527,693,757,264,-213,638,733,-604,-755,440,-324,221,518,-61,-69,-2,-523,192,553,-644,-28,718,553,385,547,198,-422,443,-947,-159,-99,368,-317,-732,891,933,597,47,486,-975,784,-580,-954,759,-494,521,325,-186,-26,331,503,-320,-386,320,-634,-502,543,570,488,595,-890,689,184,651,-825,552,-851,-428,-80,-714,173,973,-631,-504,-505,-322,357,-17,668,-262,870,-627,-356,995,-309,-839,-417,542,239,839,515,318,741,500,827,-684,274,712,-164,-363,-967,-103,-102,-714,456,405,-735,-354,-899,329,960,26,175,470,995,844,906,198,-126,348,-173,712,79,587,-285,-80,-438,-556,920,793,1,-772,203,-181,613,839,520,840,-719,775,631,836,-982,-340,-473,183,-62,-891,277,113,-386,-444,-103,-653,-556,629,-303,-641,-784,362,-131,-900,910,425,253,587,-909,-432,569,649,242,216,744,-678,146,-285,518,147,-10,-395,-968,-492,-137,995,297,-195,476,-546,416,774,-402,701,919,-748,220,312,160,305,-410,-377,470,-882,-951,-319,546,-954,-286,71,-652,208,-356,-628,644,-441,206,-102,-234,893,627,-858,-989,402,-258,-594,-674,-862,58,-99,64,-497,894,407,975,-292,-995,927,-400,-205,-443,-68,20,89,-355,875,780,217,485,-492,802,907,-170,-280,703,493,876,11,120,-251,-570,-177,800,-279,897,-353,-226,-881,951,-950,-11,6,-602,-762,-235,981,-115,-238,167,-557,-724,463,486,530,86,-118,-957,852,-949,998,382,-88,-202,683,-829,-53,735,147,-777,-752,-351,507,-59,111,340,108,-321,-333,-81,526,465,136,-478,-775,-330,-563,34,996,663,879,337,134,-122,-476,-152,-100,753,956,928,483,77,767,462,260,-46,912,327,-331,-793,819,-367,-436,-16,595,-770,-72,417,-47,352,-847,459,-952,187,-343,234,-556,-462,488,934,-593,575,-547,-667,-82,-453,570,799,303,216,-860,690,-260,-21,-804,151,-788,-470,928,-105,-236,-229,517,-441,-540,765,-387,-965,-515,-481,592,-409,-321,505,574,-203,142,-428,590,-403,807,-373,-291,567,-918,-399,228,-663,-936,-156,459,647,-994,-447,-246,327,197,-902,-882,654,-61,-45,97,399,580,435,-248,-537,817,731,-712,850,412,264,-948,-374,-829,876,819,775,-452,-723,-56,598,-116,-202,128,-49,546,704,242,332,-889,759,360,-208,140,626,106,-660,8,-749,-695,833,479,-957,-649,-492,956,517,-679,32,-442,-774,331,-644,-105,625,-341,958,-618,988,-805,976,-422,324,873,-808,759,-976,757,294,859,573,463,-784,-703,-579,-493,22,370,940,-9,72,-534,390,270,-270,43,-996,-303,-249,193,-287,-289,-211,-105,-165,-684,-738,643,-699,-754,-602,116,-921,840,785,933,-664,-782,508,-577,-379,434,-827,971,-639,208,-725,750,-619,-477,308,9,-652,-284,-285,159,662,-437,528,-782,22,-181,-222,-568,-816,652,321,-892,965,764,706,47,245,819,45,-410,-61,230,-84,481,-363,234,696,-904,-84,264,-47,-589,972,174,130,870,420,-213,142,-558,-621,300,996,-916,-752,616,-154,232,-386,35,-154,-713,-670,41,78,599,-812,535,-249,720,32,-287,-774,-705,-329,388,557,471,-21,-396,-940,843,135,-214,-210,-864,-379,-116,-866,-456,-836,166,-423,-139,857,247,-231,134,20,842,247,-359,-385,-402,-675,-779,-170,849,-227,-94,-886,-635,-142,-87,662,564,-308,769,238,153,474,-4,-226,707,80,438,747,672,-42,-693,940,-553,616,-920,143,-762,360,782,-420,673,944,274,-702,48,-168,-288,345,-314,-598,-804,223,25,-721,309,271,558,-604,944,-351,495,602,667,444,446,-965,243,810,613,97,-694,737,132,526,-620,-378,-801,-873,116,583,336,886,-801,673,-624,-123,-606,776,437,322,611,116,-65,254,-55,-323,171,-720,1000,740,489,861,-917,525,582,-33,447,124,30,-266,-328,-82,-700,358,-329,-301,210,132,624,-222,-445,751,-803,-473,800,678,-178,761,420,608,52,-639,656,-537,841,-320,-57,-290,989,164,284,-294,-281,55,475,-505,-832,408,44,296,-256,782,715,-221,-152,-889,-987,996,-209,223,-401,-753,-20,967,519,-398,448,459,584,895,369,-468,-684,-720,-619,319,544,531,39,350,-3,-336,757,-432,789,-796,-498,-398,-366,-178,885,178,25,555,439,243,-922,-527,441,-897,-134,295,-142,156,822,989,-830,983,176,432,-453,-112,299,849,852,-876,219,-188,209,-699,-542,-839,-459,287,-252,361,71,625,859,755,-211,191,-358,-500,-883,945,-708,-312,-772,685,-978,411,-962,-549,44,564,806,-888,-106,112,32,-554,429,-582,-841,-730,594,-91,-667,409,-401,-76,-919,553,-840,422,860,977,880,-147,-936,-498,-496,779,819,324,795,262,485,26,632,294,-868,39,-973,328,-937,-559,-912,682,-296,878,525,-797,-241,-40,542,69,-754,40,-583,103,23,112,113,339,366,971,-361,-593,457,311,-723,-410,-135,-652,-642,905,-988,-769,77,447,276,-85,-965,-65,498,-188,278,-735,525,-385,161,483,295,456,172,607,-651,-535,220,548,-48,805,753,-549,839], result: 87)
        ]
        for tCase in cases.enumerated() {
            if lengthOfLIS(tCase.element.nums) != tCase.element.result {
                print("Error in \(tCase.offset)")
                return
            }
        }
    }
}
